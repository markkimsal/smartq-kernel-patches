From 3d92c726050eb66147617d21dfba172ff88dc9e7 Mon Sep 17 00:00:00 2001
From: csduan <csduan@hhcn.com>
Date: Wed, 9 Dec 2009 18:56:37 +0800
Subject: [PATCH] power save changes about hdmi,video,speaker,etc...and also add version check

---
 arch/arm/mach-tcc8900/include/hhtech_gpio.h |    3 +-
 drivers/char/hhtech_gpio.c                  |  127 ++++++++++++++++++++++-----
 2 files changed, 107 insertions(+), 23 deletions(-)

diff --git a/arch/arm/mach-tcc8900/include/hhtech_gpio.h b/arch/arm/mach-tcc8900/include/hhtech_gpio.h
index 8544ebe..c14cf19 100644
--- a/arch/arm/mach-tcc8900/include/hhtech_gpio.h
+++ b/arch/arm/mach-tcc8900/include/hhtech_gpio.h
@@ -13,7 +13,7 @@
  *   you are free to modify and/or redistribute it   	        *
  *   under the terms of the GNU General Public Licence (GPL).   *
  *                                                              *
- * Last modified: 三, 02 12月 2009 15:21:25 +0800     by root #
+ * Last modified: 二, 08 12月 2009 19:02:55 +0800  by duanius #
  ****************************************************************/
 
 #ifndef __HHTECH_GPIO_H
@@ -58,6 +58,7 @@
 
 //HDMI
 #define GPIO_HDMI_EN				TCC_GPF25   /* HDMI power control, 1:on */
+#define GPIO_HDMIPWR_EN				TCC_GPF4
 #define GPIO_HDMI_HPD				TCC_GPA14   /* HDMI line insert Detect, 1:inserted */
 
 //LED
diff --git a/drivers/char/hhtech_gpio.c b/drivers/char/hhtech_gpio.c
index ec63d71..4e37b5c 100755
--- a/drivers/char/hhtech_gpio.c
+++ b/drivers/char/hhtech_gpio.c
@@ -58,7 +58,9 @@ struct hpd_struct {
     atomic_t state;
 };
 static struct hpd_struct hpd_struct;
+static int bluetooth_on;
 
+static unsigned long SmartQV_VER;
 #if defined(CONFIG_LCD_4)
 static unsigned int system_flag = 2;
 #else
@@ -167,14 +169,65 @@ static void set_wifi_en(int sw)
 		gpio_direction_output(GPIO_WIFI_EN, 0);	    //close
 }
 
+static inline int ver_check(void)
+{
+	return ((SmartQV_VER == 10801) || (SmartQV_VER == 10901));
+}
+
+// HHTECH set hdmi power
+static void set_hdmipwr_en(int sw)
+{
+	if (sw)
+	{
+		if(!ver_check())
+			gpio_direction_output(GPIO_HDMIPWR_EN, 0);  //hdmi pwr on
+		
+//		*(volatile unsigned long *)0xF0404018 &= ~0x2;
+		*(volatile unsigned long *)0xF0255000 &= ~(0x2);
+		*(volatile unsigned long *)0xF0255000 |= 0x1;//HDMI ENABLE
+
+	}
+	else
+	{
+		*(volatile unsigned long *)0xF0255000 |= 0x2;
+		*(volatile unsigned long *)0xF0255000 &= ~(0x1);
+//	        *(volatile unsigned long *)0xF0404018 |= 0x2;
+		
+		if(!ver_check())
+			gpio_direction_output(GPIO_HDMIPWR_EN, 1);  //hdmi pwr off
+	}
+}
+
 // HHTECH set hdmi 
-static void set_hdmi_en(int sw)
+void set_hdmi_en(int sw)
 {
 	if (sw)
+	{
+		set_hdmipwr_en(1);
 		gpio_direction_output(GPIO_HDMI_EN, 1);	    //open
+		gpio_direction_output(GPIO_USB_EN, 1);
+	}
 	else
+	{
+#if defined (CONFIG_LCD_7)
 		gpio_direction_output(GPIO_HDMI_EN, 0);	    //close
+		set_hdmipwr_en(0);
+		if(choosedevice && !gpio_get_value(GPIO_USB_HOSTPWR_EN))
+			gpio_direction_output(GPIO_USB_EN, 0);  // close USB power
+#else
+		set_hdmipwr_en(0);
+		if(!bluetooth_on)
+		{
+			gpio_direction_output(GPIO_HDMI_EN,0);
+			if(!gpio_get_value(GPIO_USB_OTGDRV_EN))
+				gpio_direction_output(GPIO_USB_EN, 0);
+		}
+#endif
+
+
+	}
 }
+EXPORT_SYMBOL(set_hdmi_en);
 
 // HHTECH set led1 and led2 
 static void set_led1_en(int sw)
@@ -307,6 +360,8 @@ static void shutdown_unused_devices(struct work_struct* work)
 		*(volatile unsigned long *)(0xf040008c + i*4) &= ~(0x0f000000);
 		*(volatile unsigned long *)(0xf040008c + i*4) |= 0x0e000000;
 	}
+	
+	set_hdmipwr_en(0);
 }
 
 static void battery_update_work(struct work_struct* work)
@@ -538,10 +593,11 @@ static ssize_t hhtech_sysfs_store_gb(struct device *dev, struct device_attribute
 }
 
 //hdmi ops
-static int hd_st = 0;
+static int hd_st;
 static ssize_t hhtech_sysfs_show_hd(struct device *dev, struct device_attribute *attr, char *buf)
 {
-    return snprintf(buf, PAGE_SIZE, "%d\n", hd_st);
+	hd_st = !!(PMU_PWROFF & 0x2);
+	return snprintf(buf, PAGE_SIZE, "%d\n", hd_st);
 }
 static ssize_t hhtech_sysfs_store_hd(struct device *dev, struct device_attribute *attr, const char *buf,size_t len)
 {
@@ -552,6 +608,8 @@ static ssize_t hhtech_sysfs_store_hd(struct device *dev, struct device_attribute
 
 	value = simple_strtoul(buf, NULL, 10);
 
+	hd_st = !!(PMU_PWROFF & 0x2);
+
 	if((value) && (!hd_st)) {
 		hd_st = value;
 		*(volatile unsigned long *)0xF0255000 |= 0x2;// HDMI POWER DOWN
@@ -605,15 +663,16 @@ static ssize_t hhtech_sysfs_store_io(struct device *dev, struct device_attribute
 	return len;
 }
 
-static unsigned int vpu_bus_clock_addr = 0xF0702000;
+static unsigned int vpu_bus_codec_addr = 0xF0702000;
 static unsigned int vpu_core_clock_addr = 0xF0400018;
+static unsigned int vpu_bus_clock_addr = 0xF0400014;
 static int vpu_on_st;
 static ssize_t hhtech_sysfs_show_vpu_on(struct device *dev, struct device_attribute *attr, char *buf)
 {
 	if(!!(PMU_PWROFF & 0x40))
 		return snprintf(buf, PAGE_SIZE, "%d\n", 0);
 
-	vpu_on_st = !(*(volatile unsigned long *)vpu_bus_clock_addr & 0x4);
+	vpu_on_st = !(*(volatile unsigned long *)vpu_bus_codec_addr & 0x4);
 	return snprintf(buf, PAGE_SIZE, "%d\n", vpu_on_st);
 }
 
@@ -629,24 +688,31 @@ static ssize_t hhtech_sysfs_store_vpu_on(struct device *dev, struct device_attri
 		return len;
 
 	value = simple_strtoul(buf, NULL, 10);
-	vpu_on_st = !(*(volatile unsigned long *)vpu_bus_clock_addr & 0x4);
+	vpu_on_st = !(*(volatile unsigned long *)vpu_bus_codec_addr & 0x4);
 
-	if(value && !vpu_on_st) {
-		reg_read_value = *(volatile unsigned int *)vpu_bus_clock_addr;
+	if(value && !vpu_on_st)
+	{
+		reg_read_value = *(volatile unsigned int *)vpu_bus_codec_addr;
 		reg_write_value = reg_read_value & 0xFFFFFFFB;
-		*((volatile unsigned int *) vpu_bus_clock_addr) = (unsigned int)reg_write_value;
+		*((volatile unsigned int *) vpu_bus_codec_addr) = (unsigned int)reg_write_value;
 		reg_read_value = *(volatile unsigned int *)vpu_core_clock_addr;
 		reg_write_value = reg_read_value | ((unsigned int)(1 << 21));
 		*((volatile unsigned int *) vpu_core_clock_addr) = (unsigned int)reg_write_value;
-	} else if(!value && vpu_on_st) {
 		reg_read_value = *(volatile unsigned int *)vpu_bus_clock_addr;
-		reg_write_value = reg_read_value | (1 << 2);
+		reg_write_value = reg_read_value | ((unsigned int)(1 << 21));
 		*((volatile unsigned int *) vpu_bus_clock_addr) = (unsigned int)reg_write_value;
+
+	} else if(!value && vpu_on_st) {
+		reg_read_value = *(volatile unsigned int *)vpu_bus_codec_addr;
+		reg_write_value = reg_read_value | (1 << 2);
+		*((volatile unsigned int *) vpu_bus_codec_addr) = (unsigned int)reg_write_value;
 		reg_read_value = *(volatile unsigned int *)vpu_core_clock_addr;
 		reg_write_value = reg_read_value & 0xFFDFFFFF;
 		*((volatile unsigned int *) vpu_core_clock_addr) = (unsigned int)reg_write_value;
+		reg_read_value = *(volatile unsigned int *)vpu_bus_clock_addr;
+		reg_write_value = reg_read_value & 0xFFDFFFFF;
+		*((volatile unsigned int *) vpu_bus_clock_addr) = (unsigned int)reg_write_value;
 	}
-
 	return len;
 }
 
@@ -697,22 +763,27 @@ static ssize_t hhtech_sysfs_store_play_video(struct device *dev, struct device_a
 		if(PMU_PWROFF & 0x40)
 			return len;
 
-		if(*(volatile unsigned long *)vpu_bus_clock_addr & 0x4)
+		if(*(volatile unsigned long *)vpu_bus_codec_addr & 0x4)
 			return len;
 
-		//turn off video codec power and clock
-		reg_read_value = *(volatile unsigned int *)vpu_bus_clock_addr;
+		//turn off video codec power and vbus & codec clock
+		reg_read_value = *(volatile unsigned int *)vpu_bus_codec_addr;
 		reg_write_value = reg_read_value | (1 << 2);
-		*((volatile unsigned int *) vpu_bus_clock_addr) = (unsigned int)reg_write_value;
+		*((volatile unsigned int *) vpu_bus_codec_addr) = (unsigned int)reg_write_value;
 		reg_read_value = *(volatile unsigned int *)vpu_core_clock_addr;
 		reg_write_value = reg_read_value & 0xFFDFFFFF;
 		*((volatile unsigned int *) vpu_core_clock_addr) = (unsigned int)reg_write_value;
+		reg_read_value = *(volatile unsigned int *)vpu_bus_clock_addr;
+		reg_write_value = reg_read_value & 0xFFDFFFFF;
+		*((volatile unsigned int *) vpu_bus_clock_addr) = (unsigned int)reg_write_value;
 
 		//turn off video bus power
-		PMU_PWROFF |= 0x40;
+		PMU_PWROFF |= 0x40;   
+		*(volatile unsigned long *)0xF0200000 &= ~(0x1);//disable LCD0
+		*(volatile unsigned long *)0xF0251030 = 0x45;//shut down power of CIF,LCDC0,MSCL1
+
 	}
 
-    
 	return len;
 }
 
@@ -869,9 +940,15 @@ static ssize_t hhtech_sysfs_store_usbhostpwr(struct device *dev,
 		return -EINVAL;
 
 	if (strnicmp(buf, "on", 2) == 0 || strnicmp(buf, "1", 1) == 0)
+	{
+		bluetooth_on = 1;
 		set_usb_hostpwr_en(1);		// USB system power enable
+	}
 	else if (strnicmp(buf, "off", 3) == 0 || strnicmp(buf, "0", 1) == 0)
+	{
+		bluetooth_on = 0;
 		set_usb_hostpwr_en(0);		// disable
+	}
 	else
 		return -EINVAL;
 	return len;
@@ -1209,10 +1286,10 @@ static irqreturn_t hpd_irq(int irq, void *dev_id)
 	    gpio_direction_output(GPIO_USB_EN, 1);  // open USB power
 	    gpio_direction_output(GPIO_HDMI_EN, 1); // open HDMI power
 	} else {
-	    if(gpio_get_value(GPIO_HDMI_EN)) {
-		tca_lcdc_setimgchenable(1, 2, 1);   // open FB2 display
-		tcc_lcd_on();			    // open LCD controller
-	    }
+		if(gpio_get_value(GPIO_HDMI_EN)) {
+			tca_lcdc_setimgchenable(1, 2, 1);   // open FB2 display
+			tcc_lcd_on();			    // open LCD controller
+	   	}
 	}
 	enable_irq(IRQ_HPD);
 
@@ -1502,6 +1579,9 @@ static int hhtech_gpio_suspend(struct platform_device *dev, pm_message_t state)
 	set_usb_otgdrv_en(0);
 	set_usb_syspwr_en(0);
 	set_charge_mode(1);
+	if(!user_disable_speaker)
+	    set_speaker_en(0);
+
 	return 0;
 }
 extern void __iomem *tcc_rtc_base;
@@ -1513,6 +1593,8 @@ static int hhtech_gpio_resume(struct platform_device *dev)
 {
 	int dc_status;
 
+	if(!user_disable_speaker)
+	    set_speaker_en(1);
 	set_charge_mode(0);
 	dc_status = gpio_get_value(GPIO_DC_DETE) ? 0 : 1;
 	wakeup_status = 0;
@@ -1548,6 +1630,7 @@ static struct platform_driver hhtech_gpio = {
 static int __init hhtech_gpio_init(void)
 {
 	user_disable_speaker = 0;
+	SmartQV_VER = *(volatile unsigned long *)0xeff00000;
 	return platform_driver_register(&hhtech_gpio);
 }
 
-- 
1.6.3.3

